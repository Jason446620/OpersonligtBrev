@page "/my-resume"
@using System.Text.Json
@inject IResumeService ResumeService
@inject IAccountManagement AuthenticationStateProvider


<InputTextFloating Id="resume-name"
                   Placeholder="Ditt namn"
                   BindValue="@Resume.Name"
                   BindValueChanged="@OnResumeNameChanged"
                   AdditionalClasses="mb-3" />

<BootStrapTextArea Id="about-me"
                   Placeholder="Beskriv dig själv kortfattat..."
                   Rows="4"
                   BindValue="@Resume.AboutMe"
                   BindValueChanged="OnAboutMeChanged"
                   AdditionalClasses="mb-3"></BootStrapTextArea>




<ListCreater PlaceHolder="Språk"
             ListItems="@Resume.Languages"
             ListItemChanged="OnLanguagesChanged"
             Id="lang"></ListCreater>
<ListCreater PlaceHolder="Färdigheter"
             ListItems="@Resume.Skills"
             ListItemChanged="OnSkillsChanged"
             Id="skill"></ListCreater>

<WorkItemForm WorkItems="@Resume.WorkItems" 
              ListItemChanged="@OnWorkItemsChanged"/>

<EducationItemForm EducationItems="@Resume.EducationItems"
                   ListItemChanged="@OnEducationItemsChanged"/>

<Button Color="@Colors.Green" 
        Type="@ButtonType.Button"
        OnClick="@OnSaveResume">Spara</Button>



@code {
    private ResumeModel Resume = new();
    private string UserEmail { get; set; }

    protected override async Task OnInitializedAsync()
    {
       await base.OnInitializedAsync();

       UserEmail = await AuthenticationStateProvider.GetUserEmailAsync();

       var resumes = await ResumeService.GetAllByUserEmailAsync(UserEmail);

       if(resumes.Any())
           Resume = resumes.First();
    }


    private async Task OnSaveResume()
    {
        if (string.IsNullOrWhiteSpace(Resume.UserEmail))
        {
            Resume.UserEmail = UserEmail;

            var json = JsonSerializer.Serialize(Resume);
            Console.WriteLine(json);

            await ResumeService.PostAsync(Resume);
            
        }
        else
        {
            await ResumeService.UpdateAsync(Resume.Id, Resume);
        }
    }

    private void OnAboutMeChanged(string newValue)
    {
        Resume.AboutMe = newValue;
    }

    private void OnResumeNameChanged(string newValue)
    {
        Resume.Name = newValue;
    }

    private void OnLanguagesChanged(List<string> updatedLanguages)
    {
        Resume.Languages = updatedLanguages;
    }

    private void OnSkillsChanged(List<string> updatedSkills)
    {
        Resume.Skills = updatedSkills;
    }

    private void OnWorkItemsChanged(List<ResumeWorkItem> updatedWorkItem)
    {
        Resume.WorkItems = updatedWorkItem;
    }

    private void OnEducationItemsChanged(List<ResumeEducationItem> updatedEducationItems)
    {
        Resume.EducationItems = updatedEducationItems;
    }
}